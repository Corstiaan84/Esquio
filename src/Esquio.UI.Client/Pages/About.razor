@page "/about"
@attribute [Authorize]
@inject EsquioState state
@inject IEsquioHttpClient esquioHttpClient;
<PageTransition>
    <div class="content-header">
        <div class="container-fluid">
            <div class="row">
                <section class="col-md-12">
                    <!-- Default box -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Esquio UI</h3>
                        </div>
                        <div class="card-body" style="display: block;">
                            <div class="row">
                                <div class="col-12 col-md-12 col-lg-6 order-1 order-md-2">
                                    <h3 class="text-primary">Esquio V3</h3>
                                    <p class="text-muted">
                                        Esquio is a <a href="https://martinfowler.com/articles/feature-toggles.html">Feature Toggles (aka Feature Flags) </a> and A/B testing framework for
                                        .NET Core 3.X. Feature Toogle is a powerful technique that allows developers to deliver new functionality to users withouth changing code.
                                        Provides an alternative to to mantain multiples branches (aka feature branches), so any feature can be tested even before it is completed and ready for the release.
                                        We can release a version of our product with not production ready features. These non production ready features are hidden (toggled) for the broader set of users but
                                        can be enabled to any subset of testing or internal users we want them to try the features.We can use feature toogling to enable or disable features during run time.
                                    </p>

                                    <p class="text-muted">
                                        Esquio is built with the possibility of use it not only in ASP.NET Core 3.X in mind, but making it possible to use also in other .NET Core 3.X projects like workers, webjobs, classlibraries, ... almost any kind of .NET Core 3.0 project.
                                        For the Esquio team, this is not only about using a library, but using a full Feature Toggles framework for all of our projects, and as a delivery mechanism.
                                        We believe Feature Toggling is, somekind, a way of delivering software, making it a first class citizen in your DevOps processes, therefore we are working hard towards integrating it, via extension and pipelines tasks, with Azure DevOps,
                                        so you can use Esquio Toggles directly in your releases and delivery flows. Having a full toggle delivery experience.
                                    </p>

                                    <ul class="list-unstyled">
                                        <li>
                                            <a href="https://esquio.readthedocs.io/en/latest/" class="btn-link text-secondary"><i class="far fa-fw fa-file-word"></i>&nbsp;Esquio documentation.</a>
                                        </li>
                                        <li>
                                            <a href="http://mailto:xabarilcoding@outlook.com" class="btn-link text-secondary"><i class="far fa-fw fa-envelope"></i>&nbsp;xabarilcoding@outlook.com</a>
                                        </li>
                                        <li>
                                            <a href="https://twitter.com/xabarilcoding" class="btn-link text-secondary"><i class="fab fa-fw fa-twitch"></i>&nbsp;@@xabarilcoding</a>
                                        </li>
                                        <li>
                                            <a href="https://github.com/xabaril/esquio" class="btn-link text-secondary"><i class="fab fa-fw fa-github"></i>&nbsp;Repository</a>
                                        </li>
                                        <li>
                                            <a href="https://github.com/xabaril/esquio/issues" class="btn-link text-secondary"><i class="fab fa-fw fa-github-alt"></i>&nbsp;Fill a new Issue</a>
                                        </li>
                                    </ul>
                                    <h5 class="mt-5 text-muted">Latest Public Release</h5>
                                    <div class="post">
                                        <div class="user-block">
                                            <img class="img-circle img-bordered-sm" src="@latestRelease.author.avatar_url" alt="@latestRelease.author.login">
                                            <span class="username">
                                                <a href="@latestRelease.html_url">@latestRelease.name  by @latestRelease.author.login</a>
                                            </span>
                                            <span class="description">@latestRelease.published_at.</span>
                                        </div>
                                        <!-- /.user-block -->
                                        <p>
                                            @latestRelease.body
                                        </p>

                                        @if (latestRelease.draft)
                                        {
                                            <p>
                                                <a href="#" class="link-black text-sm"><i class="fas fa-link mr-1"></i>Draft</a>
                                            </p>
                                        }
                                        <p>
                                            <a href="#" class="link-black text-sm"><i class="fas fa-code-branch mr-1"></i>Branch @latestRelease.target_commitish</a>
                                        </p>
                                        <p>
                                            <a href="#" class="link-black text-sm"><i class="fas fa-code-branch mr-1"></i>Tag @latestRelease.tag_name</a>
                                        </p>
                                        <p>
                                            <a href="@latestRelease.tarball_url" class="link-black text-sm"><i class="fas fa-link mr-1"></i>Download Zip</a>
                                        </p>
                                        <p>
                                            <a href="@latestRelease.zipball_url" class="link-black text-sm"><i class="fas fa-link mr-1"></i>Download Tar</a>
                                        </p>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->

                </section>
            </div>
        </div><!-- /.container-fluid -->
    </div>
</PageTransition>

@code {

    DetailsReleaseResponse latestRelease;

    protected override async Task OnInitializedAsync()
    {
        latestRelease = new DetailsReleaseResponse()
        {
            author = new DetailsReleaseResponseAuthor()
        };

        state.SetBreadcrumb(
            new BreadcrumbItemViewModel { Title = "Home", Link = "/", Disabled = true },
            new BreadcrumbItemViewModel { Title = "Dashboard", Active = true });

        await LoadReleases();
    }

    private async Task LoadReleases()
    {
        var releases = await esquioHttpClient.GetLatestReleases();

        if (releases != null && releases.Any())
        {
            latestRelease = releases.First();
        }
    }
}